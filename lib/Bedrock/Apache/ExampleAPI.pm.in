package Bedrock::Apache::ExampleAPI;

use strict;
use warnings;

use Apache2::Const -compile => qw(
  FORBIDDEN
  HTTP_BAD_REQUEST
  HTTP_NO_CONTENT
  HTTP_UNAUTHORIZED
  OK
  SERVER_ERROR
);

use Carp::Always;
use Carp;
use Data::Dumper;
use Data::UUID;
use English qw(-no_match_vars);
use File::Basename qw(basename);
use File::Slurp;
use MIME::Base64;

use parent qw(Bedrock::Apache::API);

use Readonly;

Readonly::Scalar our $TRUE  => 1;
Readonly::Scalar our $FALSE => 0;

__PACKAGE__->follow_best_practice;
__PACKAGE__->mk_accessors(qw(version));

our $VERSION = '@PACKAGE_VERSION@';

########################################################################
sub init {
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  my $session = $self->get_session;

  $r->log->debug( Dumper( [ session => $session->{session} ] ) );

  my $endpoints = {
    version              => [qw(GET)],
    session              => [qw(GET)],
    env                  => [qw(GET)],
    csp_violation_report => [qw(POST)],
  };

  $self->set_api_methods($endpoints);

  return $self;
}

########################################################################
# /env
########################################################################
sub api_env {
########################################################################
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  return Apache2::Const::HTTP_UNAUTHORIZED
    if !$self->authenticate_request;

  return $self->send_json_response( \%ENV );
}

########################################################################
# /session
########################################################################
sub api_session {
########################################################################
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  my $session = $self->get_session;

  return $self->send_json_response( { %{$session} } )
    if $session;

  return Apache2::Const::HTTP_BAD_REQUEST;
}

########################################################################
# /csp-violation-report
########################################################################
sub api_csp_violation_report {
########################################################################
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  my $data = $self->get_data();

  $r->log->error( JSON->new->encode($data) );

  return Apache2::Const::HTTP_NO_CONTENT;
}

########################################################################
########################################################################
# /version
########################################################################
########################################################################

########################################################################
sub api_version {
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  my $sub = {
    GET => sub {
      my ($self) = @_;
      $r->content_type('text/plain');
      $r->print($VERSION);
    }
  }->{ $r->method };

  my $response = $sub->($self);

  return Apache2::Const::OK;
}

########################################################################
sub authenticate_request {
########################################################################
  my ($self) = @_;

  my $r = $self->get_request;

  return $TRUE
    if $ENV{API_NO_AUTHENTICATION};

  # Check the X_BLOG_TBCDEVELOPMENTGROUP_SECRET header
  my $api_key = $r->headers_in->{'X-API-KEY'};

  return $TRUE
    if $api_key && $ENV{API_KEY} && $ENV{API_KEY} eq $api_key;

  $r->log_error('Invalid or missing X-API-KEY');

  $r->log_error(
    Dumper(
      [ header  => $r->headers_in,
        API_KEY => $ENV{API_KEY}
      ]
    )
  );

  return $FALSE;
}

1;

__END__

=head1 NAME

Bedrock::Apache::EaxampleAPI - mod_perl response handler for the blog API

=head1 SYNOPSIS

Configured in Apache as:

    Alias /blog-api/post /var/www/vhosts/www.treasurersbriefcase.com/blog-api/
    
    <Location /example>
        SetHandler perl-script
        PerlResponseHandler Bedrock:Apache::ExampleHandler
        Require all granted
    </Location>

=head1 DESCRIPTION

This module implements a mod_perl API handler

=head1 METHODS AND SUBROUTINES

=head1 AUTHOR

Rob Lauer - <rclauer@gmail.com>

=head1 SEE ALSO

L<mod_perl>, L<Apache2::RequestRec>

=cut

1;
